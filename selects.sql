-- SELECT: USADO PRA FAZER AS CONSULTAS ENTRE OUTRAS COISAS
/* 
SELECT COLUNAS OU * (TUDO) FROM TABELA;
*/
SELECT NomeLivro, PrecoLivro
FROM Livro;

-- SELECT INTO: CRIA UMA TABELA COM DADOS DE OUTRA TABELA
/*
SELECT COLUNAS
INTO NOVA_TABELA
FROM TABELA_ATUAL;
*/

SELECT NomeLivro, ISBN13
INTO LivroISBN
FROM Livro;

DROP TABLE  LivroISBN;

-- EXERCÍCIOS

-- 1 - RETORNA OS NOMES DE LIVROS, PREÇOS E DATAS DE PUBLICAÇÃO

SELECT NomeLivro, PrecoLivro, DataPub
FROM Livro
ORDER BY PrecoLivro;

-- 2 - RETORNA APENAS OS SOBRENOMES DOS AUTORES

SELECT SobrenomeAutor
FROM Autor
ORDER BY SobrenomeAutor;

-- 3 - RETORNA A LISTA DE ASSUNTOS

SELECT NomeAssunto
FROM Assunto
ORDER BY NomeAssunto;

--  4 - RETORNA A LISTA DE EDITORAS COM OS IDS DE CADA UMA, COM A COLUNA DE NOMES DE EDITORAS À ESQUERDA DA COLUNA DE IDS

SELECT NomeEditora, IdEditora
FROM Editora
ORDER BY IdEditora;

-- 5 - RETORNA OS IDS DE ASSUNTOS DOS QUAIS EXISTEM LIVROS CADASTRADOS NA TABELA DE LIVROS, SEM REPETIÇÃO

SELECT DISTINCT IdAssunto
FROM Livro
ORDER BY IdAssunto;

-- 6 - CRIA UMA NOVA TABELA CHAMADA LivrosFiccao QUE CONTENHA TODOS OS DADOS DOS LIVROS RELACIONADOS AO ASSUNTO DE ID 1

SELECT * 
INTO LivrosFiccao
FROM Livro
WHERE IdAssunto = 1;

DROP TABLE LivrosFiccao;

-- SLECT TOP: USADO PRA FILTRAR AS CONSULTAS
/* 
SELECT TOP NÚMERO/PERCENTUAL COLUNAS
FROM TABELA
ORDER BY
*/
-- RETORNA OS 2 PRIMEIROS LIVROS INSERIDOS ORDENADOS PELO NOME DO LIVRO

SELECT TOP (2) NomeLivro
FROM Livro
ORDER BY NomeLivro;

-- RETORNA OS 3 PRIMEIROS LIVROS CORRESPONDENTES A 15% DO TOTAL DE LIVROS INSERIDOS NA TABELA LIVRO ORDENADOS PELO NOME DO LIVRO

SELECT TOP(15) PERCENT NomeLivro
FROM Livro
ORDER BY NomeLivro ASC;

-- RETORNA OS 3 ÚLTIMOS LIVROS ORDENADOS PELO NOME DO LIVRO DA TABELA LIVRO

SELECT TOP (3) NomeLivro
FROM Livro
ORDER BY NomeLivro DESC;

-- RETORNA OS NOMES DOS LIVROS E OS 3 ÚLTIMOS IDS DA TABELA LIVROS INCLUINDO OS IDS REPETIDOS

SELECT TOP (3) WITH TIES NomeLivro, IdAssunto
FROM Livro
ORDER BY IdAssunto DESC;

-- WHERE: USADO PRA FILTRAR AS CONSULTAS USANDO CONDIÇÕES

SELECT NomeLivro, DataPub
FROM Livro
WHERE IdEditora = 3
ORDER BY IdEditora;

-- SELECT DENTRO DE OUTRO SELECT

SELECT NomeLivro, DataPub
FROM Livro
WHERE IdEditora = (
	SELECT IdEditora
	FROM Editora
	WHERE NomeEditora = 'Aleph'
	)
ORDER BY NomeLivro;

-- NOMES ALTERNATIVOS (ALIAS) AS
/*SELECT COLUNA1 AS NOME ALTERNATIVO1
FROM TABELA AS NOME ALTERNATIVO
*/
SELECT NomeLivro AS Livros
FROM Livro;

SELECT TOP (3) NomeLivro AS 'Livros mais caros', PrecoLivro AS 'Preço do livro'
FROM Livro AS L
ORDER BY 'Preço do livro' DESC;

-- OU

SELECT TOP (3) NomeLivro 'Livros mais caros', PrecoLivro 'Preço do livro'
FROM Livro L
ORDER BY 'Preço do livro' DESC;

-- USANDO VALORES LÓGICOS: AND, OR, NOT

SELECT * FROM Livro
WHERE IdLivro > 102 AND IdEditora > 4;

SELECT * FROM Livro
WHERE IdLivro > 110 OR NOT IdEditora < 4;

-- USANDO O BETWEEN

SELECT * FROM Livro
WHERE DataPub BETWEEN '20040507' AND '20140507';

SELECT * FROM Livro
WHERE PrecoLivro BETWEEN 50.00 AND 100.00;

SELECT NomeLivro, DataPub, PrecoLivro
FROM Livro
WHERE PrecoLivro >= 50.00
AND DataPub BETWEEN '20050620' AND '20100620'
OR DataPub BETWEEN '20160101' AND '20200101'
ORDER BY DataPub DESC;

-- COMBINANDO CONSULTAS COM O OPERADOR UNION

-- EXEMPLO 1

SELECT NomeAutor Nome, 'Autor' AS Tipo FROM Autor
UNION
SELECT NomeEditora Nome, 'Editora' AS Tipo FROM Editora;

-- EXEMPLO 2

SELECT NomeLivro AS Nome, 'Livro' AS Tipo FROM Livro
UNION
SELECT NomeAssunto AS Nome, 'Assunto' AS Tipo FROM Assunto;

-- EXEMPLO 3

SELECT NomeAutor AS Nome, 'Autor' AS Tipo FROM Autor
UNION
SELECT NomeEditora AS Nome, 'Editora' AS Tipo FROM Editora
UNION
SELECT NomeAssunto AS Nome, 'Assunto' AS Tipo FROM Assunto
UNION
SELECT NomeLivro AS Nome, 'Livro' AS Tipo FROM Livro;

/* FUNÇÕES DE AGREGAÇÃO: MIN, MAX, AVG, SUM, COUNT
-- COUNT: RETORNA A QUANTIDADE DE REGISTROS NA TABELA INFORMADA
-- MAX: RETORNA O VALOR MAIOR 
-- MIN: RETORNA O MENOR VALOR
-- AVG: RETORNA A MÉDIA DE UM CONJUNTO DE VALORES
*/
SELECT COUNT (*) Total_de_registros_ou_linhas_na_tabela_autores
FROM Autor;

SELECT MAX (PrecoLivro) 'Valor do livro mais caro'
FROM Livro;

SELECT MIN (NumeroPaginas) 'Menor número de páginas'
FROM Livro;

SELECT AVG (PrecoLivro) 'Preço médio de um livro'
FROM Livro;

-- OU

SELECT SUM (PrecoLivro) / COUNT (*) AS 'Preço médio'
FROM Livro;

SELECT SUM (PrecoLivro) 'Soma total dos preços dos livros'
FROM Livro;

SELECT COUNT (*) Total_de_livros_com_o_id_assunto_1
FROM Livro
WHERE IdAssunto = 1;

SELECT NomeLivro, PrecoLivro
FROM Livro
WHERE PrecoLivro = (
	SELECT MAX (PrecoLivro)
	FROM Livro
	);

-- USANDO O LIKE E O NOT LIKE
/*
% = QUALQUER CADEIA DE 0 OU MAIS CARACTERES
_ = QUALQUER CARACTERE ÚNICO
[] = CARACTERES ÚNICOS NO INTERVALO OU CONJUNTO ESPECIFICADO
[^] = CARACTERES ÚNICOS NÃO NO INTERVALO OU CONJUNTO ESPECIFICADO
*/
-- RETORNA OS LIVROS QUE COMEÇAM COM A LETRA F

SELECT * FROM Livro
WHERE NomeLivro LIKE 'F%';

-- RETORNA OS LIVROS QUE NÃO COMEÇAM COM A LETRA S

SELECT * FROM Livro
WHERE NomeLivro NOT LIKE 'S%';

-- RETORNA OS LIVROS QUE COMEÇAM COM A LETRA F OU D

SELECT * FROM Livro
WHERE NomeLivro LIKE '[FD]%';

-- RETORNA OS LIVROS QUE NÃO COMEÇAM COM A LETRA F OU COM A LETRA D

SELECT * FROM Livro
WHERE NomeLivro LIKE '[^F^D]%';

-- RETORNA OS LIVROS QUE COMEÇAM COM VOGAL

SELECT * FROM Livro
WHERE NomeLivro LIKE '[aeiou]%';

-- RETORNA OS LIVROS QUE TERMINAM COM VOGAL

SELECT * FROM Livro
WHERE NomeLivro LIKE '%[aeiou]';

-- RETORNA OS LIVROS QUE COMEÇAM COM NÚMEROS

SELECT * FROM Livro
WHERE NomeLivro LIKE '[0-9]%';

-- RETORNA OS LIVROS QUE COMEÇAM COM A E TERMINAM COM O

SELECT * FROM Livro
WHERE NomeLivro LIKE 'A%o';

-- RETORNA OS AUTORES CUJOS NOMES COMEÇAM COM R E OS SOBRENOMES COMEÇAM COM B

SELECT NomeAutor, SobrenomeAutor FROM Autor
WHERE NomeAutor LIKE 'R%' AND SobrenomeAutor LIKE 'B%';

-- RETORNA OS LIVROS QUE POSSUEM VOGAIS COMO A PENÚLTIMA LETRA DA PALAVRA

SELECT * FROM Livro
WHERE NomeLivro LIKE '%[aeiou]_';

-- RETORNA OS LIVROS QUE COMEÇA COM O J E POSSUEM 3 LETRAS APÓS O J

SELECT NomeAutor, SobrenomeAutor FROM Autor
WHERE NomeAutor LIKE 'J___';

-- RETORNA OS LIVROS QUE NÃO COMEÇAM COM VOGAIS OU NÚMEROS

SELECT * FROM Livro
WHERE NomeLivro NOT LIKE '[aeiou0-9]%';

/* GROUP BY (PERMITE AGRUPAR LINHAS QUE POSSUEM VALORES EM COMUM EM UMA OU MAIS COLUNAS, EM SEGUIDA, REALIZA OPERAÇÕES DE AGREGAÇÃO COMO SOMA, MÉDIA, CONTAGEM, MÁXIMO
MÍNIMO, SOBRE ESSES GRUPOS, SENDO POSSÍVEL CALCULAR ESTATÍSTICAS OU RESUMIR INFORMAÇÕES SOBRE ESSES GRUPOS:
*/

SELECT IdAssunto, SUM(PrecoLivro) AS 'Preço do livro'
FROM Livro
GROUP BY IdAssunto;

SELECT IdAssunto, AVG(NumeroPaginas) AS 'Média'
FROM Livro
GROUP BY IdAssunto;